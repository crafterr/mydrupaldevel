<?php

function sports_preprocess_page(&$variables){
  $database = \Drupal::database();

  //dbquery
  $result = $database->query("SELECT * FROM {players} WHERE id = :id", [':id' => 1]);
  $obj = $result->fetchObject();
  $variables['playername'] = $obj->name;

  //query builder
  $result = $database->select('players','p')
    ->fields('p')
    ->condition('id',1)
    ->execute();


  //dump($result->fetchAllAssoc('id'));

  //single record

  //$s = $result->fetch();

  //$s = $result->fetchObject();

 // foreach ($result as $r) {
   //dump($r);
  //}
  //dump($result); die();
  //$obj = $result->fetchObject();

  //$variables['playerformbuilder'] = $obj->name;

  //dump($result->fetchObject()->name); die();

  $result = $database->query("SELECT * FROM {players} p JOIN {teams} t ON t.id=p.team_id  WHERE p.id = :id",[':id' => 1]);
  //dump($result->fetchAll());
  $result = $database->query("SELECT p.id, p.name as player_name, t.name as team_name, t.description as team_description, p.data FROM {players} p JOIN {teams} t ON t.id = p.team_id WHERE p.id = :id", [':id' => 1]);
  //dump($result->fetchAll());

  $query = $database->select('players', 'p');
  $query->join('teams', 't','t.id = p.team_id');

  $query->addField('p', 'name', 'player_name');
  $query->addField('t', 'name', 'team_name');
  $query->addField('t', 'description', 'team_description');
  $result = $query
    ->fields('p', ['id', 'data'])
    ->condition('p.id', 1)
    ->execute();

  $records = $result->fetchAll();
  //dump($records);

  //queryrange
  $result = $database->queryRange("SELECT * FROM {players}", 0, 10);

  //similar
  $result = $database->select('players', 'p')
    ->fields('p')
    ->range(0, 10)
    ->execute();

 // die();
}

function template_preprocess_page_block(&$variables)
{

  $variables['test'] = 'ddsafdas';
}

/**
 * @param \Drupal\Core\Database\Query\AlterableInterface $query
 * we can use sports_query_player_query_alter
 * hook_query_TAG_alter()
 */
function sports_query_alter(Drupal\Core\Database\Query\AlterableInterface $query) {
 //hasTag(), hasAnyTag(), or hasAllTags()
  if (!$query->hasTag('player_query')) {
    return;
  }
  /*$query->join('teams', 't', 't.id = p.team_id');
  $query->addField('t', 'name', 'team_name');
  $query->condition('t.name', 'Team A');
  $query->limit(1);*/
}

/**
 * Implements hook_views_data().
 */
function sports_views_data() {
  $data = [];

  // Players table
  $data['players'] = [];
  $data['players']['table']['group'] = t('Sports');
  $data['players']['table']['base'] = array(
    'field' => 'id',
    'title' => t('Players'),
    'help' => t('Holds player data.'),
  );

  // Player fields
  $data['players']['id'] = array(
    'title' => t('ID'),
    'help' => t('The unique player ID.'),
    'field' => array(
      'id' => 'numeric',
    ),
  );

  $data['players']['name'] = array(
    'title' => t('Name'),
    'help' => t('The name of the player.'),
    'field' => array(
      'id' => 'standard',
    ),
  );

  $data['players']['data'] = array(
    'title' => t('Data'),
    'help' => t('The player data.'),
    'field' => array(
      'id' => 'serialized',
    ),
  );

  $data['players']['team_id'] = array(
    'title' => t('Team ID'),
    'help' => t('The unique team ID of the player.'),
    'field' => array(
      'id' => 'numeric',
    ),
    'relationship' => array(
      'base' => 'teams',
      'base field' => 'id',
      'id' => 'standard',
      'label' => t('Player team'),
    ),
  );


  // Teams table
  $data['teams'] = [];
  $data['teams']['table']['group'] = t('Sports');

  // Teams fields
  $data['teams']['name'] = array(
    'title' => t('Name'),
    'help' => t('The name of the team.'),
    'field' => array(
      'id' => 'standard',
    ),
  );

  $data['teams']['description'] = array(
    'title' => t('Description'),
    'help' => t('The description of the team.'),
    'field' => array(
      'id' => 'standard',
    ),
  );
  return $data;
}